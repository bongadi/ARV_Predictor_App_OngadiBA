// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package co.ke.ikocare.models;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputType;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.Utils;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class UnalignedSequenceInput implements InputType {
    private final Input<String> header;

    private final Input<String> sequence;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public UnalignedSequenceInput(Input<String> header, Input<String> sequence) {
        this.header = header;
        this.sequence = sequence;
    }

    /**
     * Name of the sequence.
     */
    public @Nullable String header() {
        return this.header.value;
    }

    /**
     * The sequence itself as a string.
     */
    public @Nullable String sequence() {
        return this.sequence.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    @Override
    public InputFieldMarshaller marshaller() {
        return new InputFieldMarshaller() {
            @Override
            public void marshal(InputFieldWriter writer) throws IOException {
                if (header.defined) {
                    writer.writeString("header", header.value);
                }
                if (sequence.defined) {
                    writer.writeString("sequence", sequence.value);
                }
            }
        };
    }

    @Override
    public int hashCode() {
        if (!$hashCodeMemoized) {
            int h = 1;
            h *= 1000003;
            h ^= header.hashCode();
            h *= 1000003;
            h ^= sequence.hashCode();
            $hashCode = h;
            $hashCodeMemoized = true;
        }
        return $hashCode;
    }

    @Override
    public boolean equals(Object o) {
        if (o == this) {
            return true;
        }
        if (o instanceof UnalignedSequenceInput) {
            UnalignedSequenceInput that = (UnalignedSequenceInput) o;
            return this.header.equals(that.header)
                    && this.sequence.equals(that.sequence);
        }
        return false;
    }

    public static final class Builder {
        private Input<String> header = Input.absent();

        private Input<String> sequence = Input.absent();

        Builder() {
        }

        /**
         * Name of the sequence.
         */
        public Builder header(@Nullable String header) {
            this.header = Input.fromNullable(header);
            return this;
        }

        /**
         * The sequence itself as a string.
         */
        public Builder sequence(@Nullable String sequence) {
            this.sequence = Input.fromNullable(sequence);
            return this;
        }

        /**
         * Name of the sequence.
         */
        public Builder headerInput(@NotNull Input<String> header) {
            this.header = Utils.checkNotNull(header, "header == null");
            return this;
        }

        /**
         * The sequence itself as a string.
         */
        public Builder sequenceInput(@NotNull Input<String> sequence) {
            this.sequence = Utils.checkNotNull(sequence, "sequence == null");
            return this;
        }

        public UnalignedSequenceInput build() {
            return new UnalignedSequenceInput(header, sequence);
        }
    }
}
